// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var React = require("react");
var Client = require("@apollo/client");
var ApolloClient__React_Hooks_UseQuery = require("rescript-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseQuery.bs.js");

var Raw = {};

var query = Client.gql(["query UsersQuery  {\nusers  {\n__typename  \nid  \nfirst_name  \nitems  {\n__typename  \nid  \nlabel  \n}\n\n}\n\n}\n"]);

function parse(value) {
  var value$1 = value.users;
  return {
          users: value$1.map(function (value) {
                var value$1 = value.items;
                return {
                        __typename: value.__typename,
                        id: value.id,
                        first_name: value.first_name,
                        items: value$1.map(function (value) {
                              return {
                                      __typename: value.__typename,
                                      id: value.id,
                                      label: value.label
                                    };
                            })
                      };
              })
        };
}

function serialize(value) {
  var value$1 = value.users;
  var users = value$1.map(function (value) {
        var value$1 = value.items;
        var items = value$1.map(function (value) {
              var value$1 = value.label;
              var value$2 = value.id;
              var value$3 = value.__typename;
              return {
                      __typename: value$3,
                      id: value$2,
                      label: value$1
                    };
            });
        var value$2 = value.first_name;
        var value$3 = value.id;
        var value$4 = value.__typename;
        return {
                __typename: value$4,
                id: value$3,
                first_name: value$2,
                items: items
              };
      });
  return {
          users: users
        };
}

function serializeVariables(param) {
  
}

function makeVariables(param) {
  
}

function makeDefaultVariables(param) {
  
}

var UsersQuery_inner = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

var include = ApolloClient__React_Hooks_UseQuery.Extend({
      query: query,
      Raw: Raw,
      parse: parse,
      serialize: serialize,
      serializeVariables: serializeVariables
    });

var use = include.use;

var UsersQuery_refetchQueryDescription = include.refetchQueryDescription;

var UsersQuery_useLazy = include.useLazy;

var UsersQuery_useLazyWithVariables = include.useLazyWithVariables;

var UsersQuery = {
  UsersQuery_inner: UsersQuery_inner,
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables,
  refetchQueryDescription: UsersQuery_refetchQueryDescription,
  use: use,
  useLazy: UsersQuery_useLazy,
  useLazyWithVariables: UsersQuery_useLazyWithVariables
};

function UserList(Props) {
  var match = Curry.app(use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var match$1 = match.data;
  var err = match.error;
  if (match.loading) {
    return "Loading...";
  } else if (err !== undefined) {
    console.error(err);
    return "Error loading data";
  } else if (match$1 !== undefined) {
    return React.createElement("div", undefined, "There are ", match$1.users.length, " users");
  } else {
    return "Something is wrong";
  }
}

var make = UserList;

exports.UsersQuery = UsersQuery;
exports.make = make;
/* query Not a pure module */
